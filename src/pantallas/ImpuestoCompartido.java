/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pantallas;

import Renders.RenderEliminarImpuesto;
import Renders.RenderEliminarImpuestoCompartido;
import conexion.Conexion;
import entidades.Cliente;
import entidades.Contrato;
import entidades.CuotaImpuesto;
import entidades.Cuotas;
import entidades.Impuesto;
import gestores.GestoresContrato;
import gestores.GestoresImpuestos;
import gestores.fechas;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import modelos.ModeloTablaImpuesto;
import modelos.ModeloTablaImpuestoCompartido;
import static pantallas.AgregarImpuestoCuota.idPeriodo;
import static pantallas.AgregarImpuestoCuota.nroCuota;
import static pantallas.DetallesContrato.tablaImpuestos;

/**
 *
 * @author Nahuel
 */
public class ImpuestoCompartido extends javax.swing.JFrame {

    /**
     * Creates new form AgregarImpuestos
     */
    public ImpuestoCompartido() {
        initComponents();
        this.setResizable(false);
            
    }
int idic;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaInmuebles = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        lblIdImpuestoCompartido = new javax.swing.JLabel();
        lblIdContrato = new javax.swing.JLabel();
        lblImporte = new javax.swing.JLabel();
        lblDescripcion = new javax.swing.JLabel();
        importe = new javax.swing.JLabel();
        idPeriodo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cargar Impuesto Compartido");
        setIconImage(getIconImage());
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jButton1.setText("Cargar Impuesto");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Impuesto: ");

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Inmuebles", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        tablaInmuebles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaInmuebles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaInmueblesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaInmuebles);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
        );

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Numero Impuesto Compartido:");

        lblIdImpuestoCompartido.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lblIdContrato.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lblImporte.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblImporte.setText("Importe:");

        lblDescripcion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        importe.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        idPeriodo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Periodo:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(344, 344, 344)
                        .addComponent(lblIdContrato)
                        .addGap(67, 86, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblIdImpuestoCompartido))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(218, 218, 218))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblDescripcion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(93, 93, 93)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(importe, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblImporte, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 78, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(idPeriodo)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lblIdImpuestoCompartido))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(idPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(lblIdContrato)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblImporte))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDescripcion)
                    .addComponent(importe))
                .addGap(18, 18, 18)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void CargarModelo() throws SQLException{
        lblIdImpuestoCompartido.setText(GestoresImpuestos.TraerImpuestoCompartido(idcon, iddes));
        ArrayList<Impuesto> impuestos=GestoresImpuestos.consultaTablaImpuestoCompartido(Integer.parseInt(lblIdImpuestoCompartido.getText()));
        ModeloTablaImpuestoCompartido modelo=new ModeloTablaImpuestoCompartido(impuestos);
        tablaInmuebles.setModel(modelo);
    }
    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
    GestoresContrato gestorCon=new GestoresContrato();
    Contrato contrato=new Contrato();
    Impuesto impuesto=new Impuesto();
    String perio="";
     if(bandera!=1){  
        int length = idPeriodo.getText().length();
        perio=(idPeriodo.getText().substring(idPeriodo.getText().indexOf("-")+2,length));     
    }
   
  
        try{
            String descripcion=(String) lblDescripcion.getText();
            String idcontrato= (String) idPeriodo.getText();
              if(bandera!=1){  
                 iddes=(Integer.parseInt(descripcion.substring(0,descripcion.indexOf("-")-1)));
                 idcon=(Integer.parseInt(idcontrato.substring(0,idcontrato.indexOf("-")-1)));   
            }
              CargarModelo();
            for(int i=0; i<tablaInmuebles.getRowCount();i++){
                String idCont=tablaInmuebles.getValueAt(i,0).toString();
                contrato.setIdContrato(Integer.parseInt(idCont));
                String Porce=tablaInmuebles.getValueAt(i,1).toString();
                impuesto.setValor(Valor*(Double.parseDouble(Porce)/100));
                datosContrato=GestoresContrato.consultaDatosContrato(Integer.parseInt(idCont));
                inicio = (datosContrato.getFechaInicio());
                SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");    
              if(bandera!=1){        
                Calendar ahora= Calendar.getInstance();
                int diaActual=ahora.get(Calendar.DATE);
                int mesActual=ahora.get((Calendar.MONTH))+1;
                int añoActual=ahora.get(Calendar.YEAR);
                int mesV = 0;
                String[] meses = {"Ene","Feb","Mar","Abr","May","Jun","Jul","Ago","Sep","Oct","Nov","Dic"};

                for(int e=0;e<meses.length;e++){
                    actual="";
                    int length = idPeriodo.getText().length();
                    perio=(idPeriodo.getText().substring(idPeriodo.getText().indexOf("-")+2,length));  
                    if(meses[e].equals(perio.substring(1,4))){
                        mesV=e+1;
                    }
                }

                    actual = diaActual+"/"+mesV+"/"+añoActual;     
            }else{
                    actual=idPeriodo.getText();
                }
                String fechaInicio = inicio;
                Date fechaInicial=dateFormat.parse(fechaInicio);
                Date fechaFinal=dateFormat.parse(actual);
                int cantmes = fechas.calcularMesesAFecha(fechaInicial ,fechaFinal );

               
//                datosCuotas = gestorCon.consultarCuotaLiquidacion(Integer.parseInt(idCont),cantmes );
//                totalPagar = (datosCuotas.get());
//                
//                if(totalPagar==0){
//                   JOptionPane.showMessageDialog(new JDialog(),"Ya se relizo la liquidacion de la cuota "+ perio + " del contrato "+idCont + " No se puede cargar el impuesto");
//                   dispose();
//                }
            }
   
        
      
            
        lblIdImpuestoCompartido.setText(Integer.toString(idic));
        


 //TODO add your handling code here:
        }catch (ParseException ex) {
            Logger.getLogger(ImpuestoCompartido.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ImpuestoCompartido.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowGainedFocus

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    String descripcion=(String) lblDescripcion.getText();
    Valor = Double.parseDouble(importe.getText());
    String perio="";
    int length = idPeriodo.getText().length();

    perio=(idPeriodo.getText().substring(idPeriodo.getText().indexOf("-")+2,length));    
        try{
            Contrato contrato=new Contrato();
            Cuotas cuotas=new Cuotas();
            CuotaImpuesto cuotaImp=new CuotaImpuesto();
            Impuesto impuesto=new Impuesto();
            
            int idImpuestoCompartido= Integer.parseInt(lblIdImpuestoCompartido.getText());
           
            for(int i=0; i<tablaInmuebles.getRowCount();i++){
                String idCon=tablaInmuebles.getValueAt(i,0).toString();
                contrato.setIdContrato(Integer.parseInt(idCon));
                String Porce=tablaInmuebles.getValueAt(i,1).toString();
                impuesto.setValor(Valor*(Double.parseDouble(Porce)/100));
                datosContrato=GestoresContrato.consultaDatosContrato(Integer.parseInt(idCon));
                inicio = (datosContrato.getFechaInicio());
                SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy"); 
                if(bandera!=1){       
                    Calendar ahora= Calendar.getInstance();
                    int diaActual=ahora.get(Calendar.DATE);
                    int mesActual=ahora.get((Calendar.MONTH))+1;
                    int añoActual=ahora.get(Calendar.YEAR);
                    int mesV = 0;
                    String[] meses = {"Ene","Feb","Mar","Abr","May","Jun","Jul","Ago","Sep","Oct","Nov","Dic"};

                    for(int e=0;e<meses.length;e++){
                        if(meses[e].equals(perio.substring(1,4))){
                            mesV=e+1;
                        }
                    }

                        actual = diaActual+"/"+mesV+"/"+añoActual;  
                        iddes=(Integer.parseInt(descripcion.substring(0,descripcion.indexOf("-")-1)));
                }else{
                        actual=idPeriodo.getText();
                    }
                String fechaInicio = inicio;
                Date fechaInicial=dateFormat.parse(fechaInicio);
                Date fechaFinal=dateFormat.parse(actual);
                int cantmes = fechas.calcularMesesAFecha(fechaInicial ,fechaFinal );

                String sql2="SELECT * FROM `impuesto`ORDER BY idImpuesto DESC LIMIT 1";
                ResultSet rs2=null;
                GestoresContrato gestorCon=new GestoresContrato();
                try{
                    PreparedStatement pst2=Conexion.getConexionn().prepareStatement(sql2);
                    rs2=pst2.executeQuery();            
                    while(rs2.next()){
                         idImpuesto=Integer.parseInt(rs2.getString("idImpuesto"))+1;
                    }
                }catch (SQLException e) {
                    JOptionPane.showMessageDialog(new JDialog(),"Error al consultar Impuesto"+e.toString());
                }
    
                cuotas.setContrato(contrato);
                cuotas.setNroCuota(cantmes);        
                impuesto.setIdImpuesto(idImpuesto);
                impuesto.setIdDescripcion(iddes);
                cuotaImp.setCuotas(cuotas);
                cuotaImp.setImpuesto(impuesto);

                GestoresImpuestos gestorImp=new GestoresImpuestos();
                
                int r=gestorImp.GestorAltaImpuesto(cuotaImp);
                try {
                    int rr=gestorImp.ActualizarTotalImpuesto(Integer.parseInt(idCon), cantmes);
                    int actualizarTotal=gestorCon.ActualizarTotalaPagar(Integer.parseInt(idCon), cantmes);
                } catch (SQLException ex) {
                    Logger.getLogger(AgregarImpuestoCuota.class.getName()).log(Level.SEVERE, null, ex);
                }  
//                if(r==1){
//                         JOptionPane.showMessageDialog(new JDialog(),"Agregado Correctamente");
//                lblIdContrato.setText(" ");
//                dispose();
//                }
            }
            dispose();
        }catch(NumberFormatException ex){

                JOptionPane.showMessageDialog(new JDialog(),"Inserte un Valor");

        } catch (ParseException ex) {
            Logger.getLogger(ImpuestoCompartido.class.getName()).log(Level.SEVERE, null, ex);
        }
       // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

         int x=GestoresImpuestos.ultimoIdImpuestoCompartido()+1;
         String idImp= Integer.toString(x);
//         lblIdImpuestoCompartido.setText(idImp);
//         idic= Integer.parseInt(lblIdImpuestoCompartido.getText());
        
// TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    private void tablaInmueblesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaInmueblesMouseClicked
      // TODO add your handling code here:
    }//GEN-LAST:event_tablaInmueblesMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImpuestoCompartido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImpuestoCompartido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImpuestoCompartido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImpuestoCompartido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ImpuestoCompartido().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JLabel idPeriodo;
    public static javax.swing.JLabel importe;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JLabel lblDescripcion;
    public static javax.swing.JLabel lblIdContrato;
    public static javax.swing.JLabel lblIdImpuestoCompartido;
    public static javax.swing.JLabel lblImporte;
    private javax.swing.JTable tablaInmuebles;
    // End of variables declaration//GEN-END:variables

    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource("Imagenes/Cagliero.png"));
        return retValue;
    }
    private int idImpuesto;
    public static int nroCuota;
    public static Date nuevafecha;
    public static int mesPeriodo;
    public static int añoPeriodo;
    public static double Valor;
    public static double totalPagar;
    public static String inicio;
    public static Contrato datosContrato;
    public static Cuotas datosCuotas;
    public static String[] meses = {"Ene","Feb","Mar","Abr","May","Jun","Jul","Ago","Sep","Oct","Nov","Dic"};
    public static int bandera;
    public static int idcon=0;
    public static int iddes=0;
    public static String actual;
}


